{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { User } from \"./user.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/angular-jwt\";\nconst PROTOCOL = 'http';\nconst PORT = 3000;\nexport let RestDataSource = /*#__PURE__*/(() => {\n  class RestDataSource {\n    constructor(http, jwtService) {\n      this.http = http;\n      this.jwtService = jwtService;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n        })\n      };\n      this.user = new User();\n      this.baseUrl = `${PROTOCOL}://${location.hostname}:${PORT}/api/`;\n    }\n\n    getActiveSurveys() {\n      return this.http.get(this.baseUrl + '', this.httpOptions);\n    }\n\n    createSurvey(survey) {\n      this.loadToken();\n      return this.http.post(this.baseUrl + 'create', survey, this.httpOptions);\n    }\n\n    updateSurvey(survey) {\n      this.loadToken();\n      console.log(JSON.stringify(survey));\n      return this.http.post(`${this.baseUrl}update/${survey._id}`, survey, this.httpOptions);\n    }\n\n    deleteSurvey(id) {\n      this.loadToken();\n      return this.http.get(`${this.baseUrl}delete/${id}`, this.httpOptions);\n    } // SURVEY RESPONSE\n\n\n    saveResponse(response) {\n      return this.http.post(this.baseUrl + 'save', response, this.httpOptions);\n    } //AUTHENTICATION\n\n\n    register(user) {\n      return this.http.post(this.baseUrl + 'register', user, this.httpOptions);\n    }\n\n    authenticate(user) {\n      return this.http.post(this.baseUrl + 'login', user, this.httpOptions);\n    }\n\n    storeUserData(token, user) {\n      localStorage.setItem('id_token', 'Bearer ' + token);\n      localStorage.setItem('user', JSON.stringify(user));\n      this.authToken = token;\n      this.user = user;\n    }\n\n    logout() {\n      this.authToken = null;\n      this.user = null;\n      localStorage.clear();\n      return this.http.get(this.baseUrl + 'logout', this.httpOptions);\n    }\n\n    loggedIn() {\n      return !this.jwtService.isTokenExpired(this.authToken);\n    }\n\n    loadToken() {\n      const token = localStorage.getItem('id_token');\n      this.authToken = token;\n      this.httpOptions.headers = this.httpOptions.headers.set('Authorization', this.authToken);\n    }\n\n  }\n\n  RestDataSource.ɵfac = function RestDataSource_Factory(t) {\n    return new (t || RestDataSource)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtHelperService));\n  };\n\n  RestDataSource.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RestDataSource,\n    factory: RestDataSource.ɵfac\n  });\n  return RestDataSource;\n})();","map":null,"metadata":{},"sourceType":"module"}